(function(t,r){typeof exports=="object"&&typeof module!="undefined"?module.exports=r(require("vue")):typeof define=="function"&&define.amd?define(["vue"],r):(t=typeof globalThis!="undefined"?globalThis:t||self,t.PinInput=r(t.Vue))})(this,function(t){"use strict";const r=["onUpdate:modelValue","type","onFocus","onKeydown","onPaste"],k=t.defineComponent({props:{modelValue:null,length:{default:4},autofocus:{type:Boolean,default:!0},secure:{type:Boolean,default:!1},characterPreview:{type:Boolean,default:!0},charPreviewDuration:{default:300},inputClass:null},emits:["update:modelValue","completed"],setup(i,{emit:f}){const n=i,B="vue-pincode-input",_="^\\d{1}$",D="tel",h="password",v=t.ref(B),c=t.ref(0),s=t.ref([]),d=t.ref({}),m=t.ref({}),y=t.ref({}),I=(e,l)=>{y.value[e]=l},C=t.computed(()=>s.value.reduce((e,l)=>e+l.value,""));t.watch(()=>n.modelValue,()=>{n.modelValue?g():E()}),t.watch(()=>n.length,()=>{E()}),t.watch(C,(e,l)=>{f("update:modelValue",e),l.length!==n.length&&e.length===n.length&&f("completed",e)}),t.onMounted(()=>{w(),g(),n.autofocus&&t.nextTick(()=>p())});const w=()=>{const e=L();for(let l=0;l<n.length;l+=1)$(l),P(l,e),b(l)},$=e=>{s.value[e]={key:e,value:""}},P=(e,l=h)=>{m.value[e]=l},b=e=>{const l=`cells.${e}.value`;d.value[l]=t.watch(()=>s.value[e].value,(o,u)=>{F(e,o,u)})},g=()=>{if(n.modelValue.length!==n.length){f("update:modelValue",C.value);return}n.modelValue.split("").forEach((e,l)=>{s.value[l].value=e||""})},F=(e,l,o)=>{if(!j(l,!1)){s.value[e].value="";return}V(),n.secure&&n.characterPreview&&setTimeout(P,n.charPreviewDuration,e)},U=(e,l)=>{s.value[e].value.length?s.value[e].value="":(T(),s.value[c.value].value="",l.preventDefault())},K=e=>{switch(e.keyCode){case 37:T();break;case 39:V();break}},R=(e,l)=>{l.preventDefault();const o=l.clipboardData.getData("text/plain").split("");let u=0;for(let a=e;a<e+o.length&&!(o[u]===void 0||s.value[a]===void 0);a++)s.value[a].value=o[u],u++},E=()=>{N(),w(),p()},N=()=>{Object.keys(d.value).forEach(l=>d.value[l]())},j=(e,l=!0)=>e?!!e.match(_):l?e==="":!1,L=()=>n.secure&&!n.characterPreview?h:D,T=()=>{!c.value||p(c.value-1)},V=()=>{c.value!==n.length-1&&p(c.value+1)},p=(e=0)=>{const l=`${v.value}${e}`,o=y.value[l];!o||(o.focus(),o.select(),c.value=e)};return(e,l)=>(t.openBlock(),t.createElementBlock("div",null,[(t.openBlock(!0),t.createElementBlock(t.Fragment,null,t.renderList(s.value,(o,u)=>t.withDirectives((t.openBlock(),t.createElementBlock("input",t.mergeProps({key:o.key,ref_for:!0,ref:a=>I(`${v.value}${u}`,a),"onUpdate:modelValue":a=>o.value=a},e.$attrs,{class:`${i.inputClass}`,type:m.value[u],onFocus:a=>c.value=u,onKeydown:[t.withKeys(a=>U(u,a),["delete"]),K],onPaste:a=>R(u,a)}),null,16,r)),[[t.vModelDynamic,o.value,void 0,{trim:!0}]])),128))]))}});return{install:(i,f={})=>{i.component("pin-input",k)}}});
