(function(l,r){typeof exports=="object"&&typeof module!="undefined"?module.exports=r(require("vue")):typeof define=="function"&&define.amd?define(["vue"],r):(l=typeof globalThis!="undefined"?globalThis:l||self,l.PinInput=r(l.Vue))})(this,function(l){"use strict";const r=["onUpdate:modelValue","type","onFocus","onKeydown","onPaste"],k=l.defineComponent({props:{modelValue:null,length:{default:4},autofocus:{type:Boolean,default:!0},secure:{type:Boolean,default:!1},characterPreview:{type:Boolean,default:!0},charPreviewDuration:{default:300},inputClass:null},emits:["update:modelValue","completed"],setup(i,{emit:f}){const n=i,_="vue-pincode-input",D="^\\d{1}$",B="tel",h="password",v=l.ref(_),c=l.ref(0),s=l.ref([]),d=l.ref({}),m=l.ref({}),y=l.ref({}),I=(e,t)=>{y.value[e]=t},C=l.computed(()=>s.value.reduce((e,t)=>e+t.value,""));l.watch(()=>n.modelValue,()=>{n.modelValue?g():E()}),l.watch(()=>n.length,()=>{E()}),l.watch(C,(e,t)=>{f("update:modelValue",e),t.length!==n.length&&e.length===n.length&&f("completed",e)}),l.onMounted(()=>{w(),g(),n.autofocus&&l.nextTick(()=>p())});const w=()=>{const e=L();for(let t=0;t<n.length;t+=1)$(t),P(t,e),b(t)},$=e=>{s.value[e]={key:e,value:""}},P=(e,t=h)=>{m.value[e]=t},b=e=>{const t=`cells.${e}.value`;d.value[t]=l.watch(()=>s.value[e].value,(o,u)=>{F(e,o,u)})},g=()=>{if(n.modelValue.length!==n.length){f("update:modelValue",C.value);return}n.modelValue.split("").forEach((e,t)=>{s.value[t].value=e||""})},F=(e,t,o)=>{if(!j(t,!1)){s.value[e].value="";return}V(),n.secure&&n.characterPreview&&setTimeout(P,n.charPreviewDuration,e)},U=(e,t)=>{s.value[e].value.length?s.value[e].value="":(T(),s.value[c.value].value="",t.preventDefault())},K=e=>{switch(e.keyCode){case 37:T();break;case 39:V();break}},R=(e,t)=>{t.preventDefault();const o=t.clipboardData.getData("text/plain").split("");let u=0;for(let a=e;a<e+o.length&&!(o[u]===void 0||s.value[a]===void 0);a++)s.value[a].value=o[u],u++},E=()=>{N(),w(),p()},N=()=>{Object.keys(d.value).forEach(t=>d.value[t]())},j=(e,t=!0)=>e?!!e.match(D):t?e==="":!1,L=()=>n.secure&&!n.characterPreview?h:B,T=()=>{!c.value||p(c.value-1)},V=()=>{c.value!==n.length-1&&p(c.value+1)},p=(e=0)=>{const t=`${v.value}${e}`,o=y.value[t];!o||(o.focus(),o.select(),c.value=e)};return(e,t)=>(l.openBlock(!0),l.createElementBlock(l.Fragment,null,l.renderList(s.value,(o,u)=>l.withDirectives((l.openBlock(),l.createElementBlock("input",l.mergeProps({key:o.key,ref_for:!0,ref:a=>I(`${v.value}${u}`,a),"onUpdate:modelValue":a=>o.value=a},e.$attrs,{class:`${i.inputClass}`,type:m.value[u],onFocus:a=>c.value=u,onKeydown:[l.withKeys(a=>U(u,a),["delete"]),K],onPaste:a=>R(u,a)}),null,16,r)),[[l.vModelDynamic,o.value,void 0,{trim:!0}]])),128))}});return{install:(i,f={})=>{i.component("pin-input",k)}}});
